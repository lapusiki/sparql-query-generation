package net.lapusiki.core.parser.impl;

import net.lapusiki.core.parser.Parser;
import org.springframework.stereotype.Component;

import java.util.Arrays;

/**
 * Created by blvp on 12.05.15.
 */
@Component
public class PrepositionsAndPunctuationParser implements Parser {

    private String[] prepositions =
            "а-ля без без ведома безо благодаря близ близко от в в виде в зависимости от в интересах в качестве в лице в отличие от в отношении в пандан в пользу в преддверии в продолжение в результате в роли в связи с в силу в случае в соответствии с в течение в целях вблизи ввиду вглубь вдогон вдоль вдоль по взамен включая вкруг вместо вне внизу внутри внутрь во во имя вовнутрь возле вокруг вопреки вослед впереди вплоть до впредь до вразрез вроде вслед вслед за вследствие для для-ради до за за вычетом за исключением за счёт заместо из из-за из-под изнутри изо исходя из к касательно ко кроме кругом лицом к лицу с меж между мимо на на благо на виду у на глазах у на предмет наверху навроде навстречу над надо назад накануне наперекор наперерез наподобие напротив наряду с насупротив насчёт начиная с не без не в не за не считая невзирая на недалеко от независимо от несмотря на ниже о об обо обок около окрест окромя округ опосля от от имени от лица относительно ото перед передо по по линии по мере по направлению к по отношению к по поводу по причине по случаю по сравнению с по-за по-над по-под поблизости от поверх под под видом под эгидой подле подо подобно позади позднее помимо поперёд поперёк порядка посередине посередь после посреди посредине посредством пред предо прежде при при помощи применительно к про против путём ради рядом с с с ведома с помощью с точки зрения с целью сверх сверху свыше сзади сквозь скрозь следом за смотря по снизу со согласно спустя среди средь сродни судя по супротив через чрез".split(" ");

    {
        Arrays.sort(prepositions);
    }

    @Override
    public String[] parse(String sentence) {
        sentence = sentence.replaceAll("[?,.!'\"/*-+]", "");
        StringBuilder builder = new StringBuilder();
        for (String word : sentence.split(" ")) {
            int index = Arrays.binarySearch(prepositions, word);
            if (index > 0) continue;
            builder.append(word).append(" ");
        }
        return builder.toString().split(" ");
    }

}
